{"version":3,"sources":["component/ApiCountry.jsx","component/Main.js","component/Head.js","component/Total.jsx","component/Graph.jsx","component/Detail.jsx","App.js","index.js","component/Head.module.css"],"names":["ApiCountry","country","className","to","pathname","Country","state","Main","API","a","axios","get","res","useState","setCountry","search","setSearch","searched","setSearched","setDate","setTotalConfirm","setTotalDeaths","setNewConfirm","setNewDeaths","useEffect","then","data","Countries","Global","catch","error","console","log","Date","split","TotalConfirmed","TotalDeaths","NewConfirmed","NewDeaths","onSubmit","e","preventDefault","filter","v","toLowerCase","includes","type","placeholder","onChange","target","value","length","map","i","Head","styles","header","Total","date","totalConfirm","totalDeaths","newConfirm","newDeaths","toLocaleString","Graph","countryCode","CountryCode","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","fetchEvents","Api","makeData","items","arr","reduce","acc","cur","currentDate","year","getFullYear","month","getMonth","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","labels","datasets","label","backgroundColor","fill","borderColor","last","options","legend","display","position","Detail","choose","useLocation","newconfirmed","newdeaths","totalconfirmed","totaldeaths","App","exact","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0NAgBeA,EAfI,SAAC,GAAa,IAAZC,EAAW,EAAXA,QAEnB,OACE,oBAAIC,UAAU,aAAd,SACE,cAAC,IAAD,CAAMC,GAAI,CACRC,SAAS,IAAD,OAAKH,EAAQI,SACrBC,MAAM,CACJL,QAAQA,IAHZ,SAMEA,EAAQI,aCyDDE,EA9DH,WACV,IAAMC,EAAG,uCAAG,4BAAAC,EAAA,sEACQC,IAAMC,IAAI,sCADlB,cACJC,EADI,yBAEHA,GAFG,2CAAH,qDAIT,EAA6BC,mBAAS,IAAtC,mBAAOZ,EAAP,KAAea,EAAf,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEA,EAAuBL,mBAAS,GAAhC,mBAAYM,GAAZ,WACA,EAAwCN,mBAAS,GAAjD,mBAAqBO,GAArB,WACA,EAAsCP,mBAAS,GAA/C,mBAAoBQ,GAApB,WACA,EAAoCR,mBAAS,GAA7C,mBAAmBS,GAAnB,WACA,EAAkCT,mBAAS,GAA3C,mBAAkBU,GAAlB,WAEAC,qBAAU,WACQhB,IACRiB,MAAK,SAACb,GAEZ,OADAE,EAAWF,EAAIc,KAAKC,WACbf,EAAIc,KAAKE,UACfC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC7BL,MAAK,SAAAb,GACJO,EAAQP,EAAIqB,KAAKC,MAAM,KAAK,IAC5Bd,EAAgBR,EAAIuB,gBACpBd,EAAeT,EAAIwB,aACnBd,EAAcV,EAAIyB,cAClBd,EAAaX,EAAI0B,gBAGnB,IAUF,OACE,mCACE,sBAAKpC,UAAU,YAAf,UACE,uBAAMqC,SAPS,SAACC,GACpBA,EAAEC,iBACFvB,EAAYjB,EAAQyC,QAAO,SAACC,GAAD,OAAKA,EAAEtC,QAAQuC,cAAcC,SAAS9B,QAK7D,UACE,uBAAO+B,KAAK,OAAOC,YAAY,0DAAaC,SAZ9B,SAACR,GACrBxB,EAAUwB,EAAES,OAAOC,UAYb,qDAEF,oBAAIhD,UAAU,aAAd,SAEwB,IAApBe,EAASkC,OACTlD,EAAQmD,KAAI,SAACT,EAAEU,GAAH,OAAQ,cAAC,EAAD,CAAsBpD,QAAS0C,GAAdU,EAAEV,MACvC1B,EAASmC,KAAI,SAACT,EAAEU,GAAH,OAAQ,cAAC,EAAD,CAAsBpD,QAAS0C,GAAdU,EAAEV,c,iBC1CrCW,EAXF,WACX,OACE,sBAAKpD,UAAWqD,IAAOC,OAAvB,UACE,cAAC,IAAD,CAAMrD,GAAG,IAAT,SAAa,yDACb,mCACE,kDACA,yDCiCOsD,EAvCD,WAEZ,MAAuB5C,mBAAS,GAAhC,mBAAO6C,EAAP,KAAYvC,EAAZ,KACA,EAAwCN,mBAAS,GAAjD,mBAAO8C,EAAP,KAAqBvC,EAArB,KACA,EAAsCP,mBAAS,GAA/C,mBAAO+C,EAAP,KAAoBvC,EAApB,KACA,EAAoCR,mBAAS,GAA7C,mBAAOgD,EAAP,KAAmBvC,EAAnB,KACA,EAAkCT,mBAAS,GAA3C,mBAAOiD,EAAP,KAAkBvC,EAAlB,KACMf,EAAG,uCAAG,4BAAAC,EAAA,sEACQC,IAAMC,IAAI,sCADlB,cACJC,EADI,yBAEHA,GAFG,2CAAH,qDAmBT,OAfAY,qBAAU,WACQhB,IACRiB,MAAK,SAACb,GACZ,OAAOA,EAAIc,KAAKE,UACfC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC7BL,MAAK,SAAAb,GACJO,EAAQP,EAAIqB,KAAKC,MAAM,KAAK,IAC5Bd,EAAgBR,EAAIuB,gBACpBd,EAAeT,EAAIwB,aACnBd,EAAcV,EAAIyB,cAClBd,EAAaX,EAAI0B,gBAGnB,IAGA,mCACE,sBAAKpC,UAAU,YAAf,UACE,uDAAWwD,KACX,oEAAcC,EAAaI,oBAC3B,oEAAcH,EAAYG,oBAC1B,0EAAeF,EAAWE,oBAC1B,0EAAeD,EAAUC,0B,eC6ElBC,EA7GD,SAAC,GAAU,IAATtC,EAAQ,EAARA,KACRuC,EAAcvC,EAAKwC,YAAYtB,cACrC,EAAwC/B,mBAAS,IAAjD,mBAAOsD,EAAP,KAAqBC,EAArB,KACA,EAA8CvD,mBAAS,IAAvD,mBAAOwD,EAAP,KAAwBC,EAAxB,KACA,EAAwCzD,mBAAS,IAAjD,mBAAO0D,EAAP,KAAqBC,EAArB,KA8EA,OA7EAhD,qBAAU,WACR,IAAMiD,EAAW,uCAAG,4BAAAhE,EAAA,sEACAC,IAAMC,IAAN,0DAA6DsD,IAD7D,OACZS,EADY,OAElBC,EAASD,EAAIhD,MAFK,2CAAH,qDAIXiD,EAAU,SAACC,GAEf,IAAMC,EAAMD,EAAME,QAAO,SAACC,EAAIC,GAC5B,IAAMC,EAAc,IAAIhD,KAAK+C,EAAI/C,MAC3BiD,EAAOD,EAAYE,cACnBC,EAAQH,EAAYI,WACpB3B,EAAOuB,EAAYK,UACnBC,EAAYP,EAAIQ,UAChBC,EAAST,EAAIU,OACbC,EAAQX,EAAIY,OACZC,EAAYb,EAAIc,UAChBC,EAAWhB,EAAIiB,MAAM,SAAAvF,GAAC,OAAGA,EAAEyE,OAASA,GAAQzE,EAAE2E,QAAUA,KAa9D,OAZIW,GACFhB,EAAIkB,KAAK,CAACf,OAAME,QAAQ1B,OAAO6B,YAAYE,SAASE,QAAQE,cAE3DE,GAAYA,EAASrC,KAAOA,IAC7BqC,EAASN,OAASA,EAClBM,EAASJ,MAAQA,EACjBI,EAASrC,KAAOA,EAChBqC,EAASb,KAAOA,EAChBa,EAASX,MAAQA,EACjBW,EAASF,UAAYA,EACrBE,EAASR,UAAYA,GAEhBR,IACP,IACImB,EAASrB,EAAIzB,KAAI,SAAAT,GAAC,gBAAOA,EAAEuC,KAAT,YAAiBvC,EAAEyC,MAAO,EAA1B,aACxBhB,EAAiB,CACf8B,SACAC,SACA,CACE,CACEC,MAAM,+CACNC,gBAAgB,SAChBC,KAAK,OACL5E,KAAMmD,EAAIzB,KAAI,SAAAT,GAAC,OAAEA,EAAE4C,iBAIzBjB,EAAmB,CACjB4B,SACAC,SACA,CACE,CACEC,MAAM,+CACNG,YAAY,SACZD,MAAK,EACL5E,KAAMmD,EAAIzB,KAAI,SAAAT,GAAC,OAAEA,EAAE8C,cAIzB,IAAMe,EAAO3B,EAAIA,EAAI1B,OAAO,GAC5BqB,EAAgB,CACd0B,OAAO,CAAC,qBAAM,2BAAO,gBACrBC,SACA,CACE,CACEC,MAAM,oEACNC,gBAAgB,CAAC,UAAU,UAAU,WACrCE,YAAY,CAAC,UAAU,UAAU,WACjCD,MAAK,EACL5E,KAAM,CAAC8E,EAAKjB,UAAWiB,EAAKX,UAAWW,EAAKb,YAMpDlB,MACA,IAEJ1C,QAAQC,IAAIN,EAAKrB,SAGb,oCACE,+BAAKqB,EAAKrB,QAAV,4CACA,sBAAKH,UAAU,WAAf,UACE,8BACE,cAAC,IAAD,CAAKwB,KAAMyC,EAAesC,QAExB,CAAEC,OAAQ,CAAEC,SAAQ,EAAMC,SAAS,cAGvC,8BACE,cAAC,IAAD,CAAMlF,KAAM2C,EAAiBoC,QAE3B,CAAEC,OAAQ,CAAEC,SAAQ,EAAMC,SAAS,cAGvC,8BACE,cAAC,IAAD,CAAUlF,KAAM6C,EAAckC,SACE,mEAAuB,IAAIxE,MAAOoD,WAAW,EAA7C,WAC9B,CAAEqB,OAAQ,CAAEC,SAAQ,EAAMC,SAAS,sBCnEhCC,EAjCA,WACb,IAAMC,EAASC,cAAczG,MAAML,QACnC,EAA6BY,mBAASiG,EAAOzG,SAA7C,mBAAOJ,EAAP,KACA,GADA,KACuCY,mBAASiG,EAAOzE,eAAvD,mBAAO2E,EAAP,KACA,GADA,KACiCnG,mBAASiG,EAAOxE,YAAjD,mBAAO2E,EAAP,KACA,GADA,KAC2CpG,mBAASiG,EAAO3E,iBAA3D,mBAAO+E,EAAP,KACA,GADA,KACqCrG,mBAASiG,EAAO1E,cAArD,mBAAO+E,EAAP,UAEA,OACE,sBAAKjH,UAAU,SAAf,UACE,gCACE,kCACE,qBAAIA,UAAU,OAAd,UACE,oBAAIA,UAAU,OAAd,0BACA,oBAAIA,UAAU,OAAd,6CACA,oBAAIA,UAAU,OAAd,6CACA,oBAAIA,UAAU,OAAd,uCACA,oBAAIA,UAAU,OAAd,0CAEF,qBAAIA,UAAU,OAAd,UACE,oBAAIA,UAAU,OAAd,SAAsBD,IACtB,oBAAIC,UAAU,OAAd,SAAsB8G,EAAajD,mBACnC,oBAAI7D,UAAU,OAAd,SAAsB+G,EAAUlD,mBAChC,oBAAI7D,UAAU,OAAd,SAAsBgH,EAAenD,mBACrC,oBAAI7D,UAAU,OAAd,SAAsBiH,EAAYpD,2BAIxC,cAAC,EAAD,CAAOrC,KAAMoF,QCLJM,EArBJ,WAEP,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,aCdZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,mBCR1BC,EAAOC,QAAU,CAAC,OAAS,uB","file":"static/js/main.05946575.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\r\nconst ApiCountry = ({country})=>{\r\n  // console.log(country)  \r\n  return(    \r\n    <li className='country_li' >\r\n      <Link to={{\r\n        pathname:`/${country.Country}`,\r\n        state:{\r\n          country:country\r\n        }\r\n      }} >\r\n       {country.Country}\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\nexport default ApiCountry","import React, { useEffect, useRef, useState  } from 'react';\r\nimport axios from \"axios\";\r\nimport ApiCountry from './ApiCountry';\r\n// import GetApi from '../Hooks/GetApi'\r\n\r\n\r\nconst Main =()=>{\r\n  const API = async ()=>{\r\n    const res = await axios.get(\"https://api.covid19api.com/summary\")\r\n    return res\r\n  };\r\n  const [country,setCountry] = useState([])\r\n  const [search, setSearch] = useState('')\r\n  const [searched, setSearched]=useState([])\r\n\r\n  const [date,setDate] = useState(0)\r\n  const [totalConfirm, setTotalConfirm] = useState(0)\r\n  const [totalDeaths, setTotalDeaths] = useState(0)\r\n  const [newConfirm, setNewConfirm] = useState(0)\r\n  const [newDeaths, setNewDeaths] = useState(0)\r\n  \r\n  useEffect(()=>{\r\n    const use_res = API()\r\n    use_res.then((res)=>{\r\n      setCountry(res.data.Countries)\r\n      return res.data.Global\r\n    }).catch(error => console.log(error))\r\n    .then(res => {\r\n      setDate(res.Date.split('T')[0])\r\n      setTotalConfirm(res.TotalConfirmed)\r\n      setTotalDeaths(res.TotalDeaths)\r\n      setNewConfirm(res.NewConfirmed)\r\n      setNewDeaths(res.NewDeaths)\r\n    })\r\n    \r\n  },[])\r\n\r\n  const onChangeInput = (e)=>{\r\n    setSearch(e.target.value)\r\n   \r\n  }\r\n  const onSubmitForm = (e)=>{\r\n    e.preventDefault();\r\n    setSearched(country.filter((v)=>v.Country.toLowerCase().includes(search)))\r\n  }\r\n  return(\r\n    <>\r\n      <div className=\"container\" >\r\n        <form onSubmit={onSubmitForm}>\r\n          <input type='text' placeholder='국가를 검색해보세요' onChange={onChangeInput}/>\r\n          <button>찾기</button>\r\n        </form>\r\n        <ul className='country_ul'>\r\n          {\r\n            searched.length === 0 ?\r\n            country.map((v,i)=> <ApiCountry key={i+v} country={v}/>):\r\n            searched.map((v,i)=> <ApiCountry key={i+v} country={v}/>)\r\n          }\r\n        </ul>         \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Main","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './Head.module.css'\r\nconst Head = () => {\r\n  return(\r\n    <div className={styles.header}>\r\n      <Link to='/'><h1>COVID-19 상황</h1></Link>\r\n      <select>\r\n        <option>국내</option>\r\n        <option>국외</option>\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\nexport default Head","import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\";\r\n// import GetApi from '../Hooks/GetApi'\r\nconst Total = ()=>{\r\n  \r\n  const [date,setDate] = useState(0)\r\n  const [totalConfirm, setTotalConfirm] = useState(0)\r\n  const [totalDeaths, setTotalDeaths] = useState(0)\r\n  const [newConfirm, setNewConfirm] = useState(0)\r\n  const [newDeaths, setNewDeaths] = useState(0)\r\n  const API = async ()=>{\r\n    const res = await axios.get(\"https://api.covid19api.com/summary\")\r\n    return res\r\n  };\r\n  useEffect(()=>{\r\n    const use_res = API()\r\n    use_res.then((res)=>{\r\n      return res.data.Global\r\n    }).catch(error => console.log(error))\r\n    .then(res => {\r\n      setDate(res.Date.split('T')[0])\r\n      setTotalConfirm(res.TotalConfirmed)\r\n      setTotalDeaths(res.TotalDeaths)\r\n      setNewConfirm(res.NewConfirmed)\r\n      setNewDeaths(res.NewDeaths)\r\n    })\r\n    \r\n  },[])\r\n  \r\n  return (\r\n    <>\r\n      <div className='total_box'>\r\n        <h1>기준일 : {date}</h1>\r\n        <h2>총 확진자수 : {totalConfirm.toLocaleString()}</h2>\r\n        <h2>총 사망자수 : {totalDeaths.toLocaleString()}</h2>\r\n        <h2>금일 확진자수 : {newConfirm.toLocaleString()}</h2>\r\n        <h2>금일 사망자수 : {newDeaths.toLocaleString()}</h2>\r\n      </div>\r\n      \r\n    </>\r\n  )\r\n}\r\nexport default Total","import React,{useEffect, useLocation, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Bar,Doughnut, Line } from 'react-chartjs-2';\r\n\r\nconst Graph = ({data})=>{\r\n  const countryCode = data.CountryCode.toLowerCase()\r\n  const [confirmedData,setConfirmedData]= useState({})\r\n  const [quarantinedData, setQuarantinedData] = useState({})\r\n  const [comparedData, setComparedData] = useState({})\r\n  useEffect(()=>{\r\n    const fetchEvents = async ()=>{\r\n      const Api = await axios.get(`https://api.covid19api.com/total/dayone/country/${countryCode}`)\r\n      makeData(Api.data)\r\n    }\r\n    const makeData =(items)=>{\r\n      // console.log(items)\r\n      const arr = items.reduce((acc,cur) => {\r\n        const currentDate = new Date(cur.Date);\r\n        const year = currentDate.getFullYear()\r\n        const month = currentDate.getMonth()\r\n        const date = currentDate.getDate()\r\n        const confirmed = cur.Confirmed;\r\n        const active = cur.Active;\r\n        const death = cur.Deaths;\r\n        const recovered = cur.Recovered;\r\n        const findItem = acc.find( a=> a.year === year && a.month === month)\r\n        if(!findItem){\r\n          acc.push({year, month , date , confirmed , active , death , recovered})\r\n        }\r\n        if(findItem && findItem.date < date){\r\n          findItem.active = active;\r\n          findItem.death = death;\r\n          findItem.date = date;\r\n          findItem.year = year;\r\n          findItem.month = month;\r\n          findItem.recovered = recovered;\r\n          findItem.confirmed = confirmed;\r\n        }\r\n        return acc;\r\n      },[])\r\n      const labels = arr.map(v => `${v.year} ${v.month +1}월`)\r\n      setConfirmedData({\r\n        labels,\r\n        datasets : \r\n        [\r\n          {\r\n            label:\"국내 누적 확진자\",\r\n            backgroundColor:\"salmon\",\r\n            fill:\"true\",\r\n            data: arr.map(v=>v.confirmed)\r\n          }\r\n        ]\r\n      })\r\n      setQuarantinedData({\r\n        labels,\r\n        datasets : \r\n        [\r\n          {\r\n            label:\"월별 격리자 현황\",\r\n            borderColor:\"salmon\",\r\n            fill:false,\r\n            data: arr.map(v=>v.active)\r\n          }\r\n        ]\r\n      })\r\n      const last = arr[arr.length-1]\r\n      setComparedData({\r\n        labels:[\"확진자\",\"격리해제\",\"사망\"],\r\n        datasets : \r\n        [\r\n          {\r\n            label:\"누적 확진, 해제, 사망비율\",\r\n            backgroundColor:[\"#ff3d67\",\"#059bff\",\"#ffc233\"],\r\n            borderColor:[\"#ff3d67\",\"#059bff\",\"#ffc233\"],\r\n            fill:false,\r\n            data: [last.confirmed, last.recovered, last.death]\r\n          }\r\n        ]\r\n      })\r\n      // console.log(arr)\r\n    }\r\n    fetchEvents()\r\n  },[])\r\n\r\nconsole.log(data.Country)\r\n\r\n  return(\r\n    <section>\r\n      <h2>{data.Country}의 코로나 현황</h2>\r\n      <div className=\"contents\">\r\n        <div>\r\n          <Bar data={confirmedData} options={\r\n            { title: {display : true, text : '누적 확진자 추이', fontSize : 16 } },\r\n            { legend: { display:true, position:'right' }}\r\n          } /> \r\n        </div>\r\n        <div>\r\n          <Line data={quarantinedData} options={\r\n            { title: {display : true, text : '월별 격리자 추이', fontSize : 16 } },\r\n            { legend: { display:true, position:'right' }}\r\n          } /> \r\n        </div>\r\n        <div>\r\n          <Doughnut data={comparedData} options={\r\n            { title: {display : true, text : `누적 확진, 해제, 사망 ( ${ new Date().getMonth()+1 }월)`, fontSize : 16 } },\r\n            { legend: { display:true, position:'right' }}\r\n          } /> \r\n        </div>\r\n      </div>\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default Graph","import React, { useEffect, useRef, useState ,useParams } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Graph from './Graph'\r\n\r\n\r\nconst Detail = ()=>{\r\n  const choose = useLocation().state.country\r\n  const [country,setCountry] = useState(choose.Country)\r\n  const [newconfirmed,setNewconfirmed] = useState(choose.NewConfirmed)\r\n  const [newdeaths,setNewdeaths] = useState(choose.NewDeaths)\r\n  const [totalconfirmed,setTotalconfirmed] = useState(choose.TotalConfirmed)\r\n  const [totaldeaths,setTotaldeaths] = useState(choose.TotalDeaths)\r\n  // console.log(choose)\r\n  return(\r\n    <div className=\"w_1440\">\r\n      <table>\r\n        <tbody>\r\n          <tr className=\"d_tr\">\r\n            <td className=\"d_td\">나라</td>\r\n            <td className=\"d_td\">금일 확진자</td>\r\n            <td className=\"d_td\">금일 사망자</td>\r\n            <td className=\"d_td\">총 확진자</td>\r\n            <td className=\"d_td\">총 사망자</td>\r\n          </tr>\r\n          <tr className=\"d_tr\">\r\n            <td className=\"d_td\">{country}</td>\r\n            <td className=\"d_td\">{newconfirmed.toLocaleString()}</td>\r\n            <td className=\"d_td\">{newdeaths.toLocaleString()}</td>\r\n            <td className=\"d_td\">{totalconfirmed.toLocaleString()}</td>\r\n            <td className=\"d_td\">{totaldeaths.toLocaleString()}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <Graph data={choose}/>\r\n      \r\n    </div>\r\n  )\r\n}\r\nexport default Detail","import React, {  } from 'react';\nimport './App.css';\nimport Main from './component/Main';\nimport Head from './component/Head'\nimport Total from './component/Total';\nimport Detail from './component/Detail'\nimport {Route,BrowserRouter,Switch} from 'react-router-dom'\nconst App= ()=>{\n  \n    return (\n      <BrowserRouter>\n        <Head />\n        <Total />\n\n        <Switch>\n          <Route exact path='/'>\n            <Main />\n          </Route>\n          <Route path='/:country' >\n            <Detail />\n          </Route>\n        </Switch>\n        \n      </BrowserRouter>\n      );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Head_header__12V3U\"};"],"sourceRoot":""}