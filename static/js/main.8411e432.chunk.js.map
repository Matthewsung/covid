{"version":3,"sources":["component/ApiCountry.js","component/Main.tsx","component/Head.tsx","component/Total.tsx","component/Graph.js","component/Detail.tsx","App.js","index.js","component/Head.module.css"],"names":["ApiCountry","country","useState","data","setData","useEffect","className","to","pathname","Country","state","Main","API","a","axios","get","res","setCountry","search","setSearch","searched","setSearched","then","Countries","catch","error","console","log","onSubmit","e","preventDefault","filter","value","toLowerCase","includes","type","placeholder","onChange","target","length","map","v","i","Head","styles","header","Total","date","setDate","totalConfirm","setTotalConfirm","totalDeaths","setTotalDeaths","newConfirm","setNewConfirm","newDeaths","setNewDeaths","Global","Date","split","TotalConfirmed","TotalDeaths","NewConfirmed","NewDeaths","toLocaleString","Graph","code","useLocation","countryData","setCountryData","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","countryCode","CountryCode","fetchEvents","Api","makeData","items","arr","reduce","acc","cur","currentDate","year","getFullYear","month","getMonth","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","labels","datasets","label","backgroundColor","fill","borderColor","last","options","legend","display","position","Detail","choose","App","exact","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8411e432.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ApiCountry = ({country})=>{\r\n  const [data, setData] = useState({})\r\n\r\n  useEffect(()=> {\r\n    setData(country)\r\n  },[country])\r\n  \r\n  return(    \r\n    <li className='country_li' >\r\n      <Link to={{\r\n        pathname:`/covid/${data.Country}`,\r\n        state:{data}\r\n      }} >\r\n       {data.Country}\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\nexport default ApiCountry","import React, { useEffect, useState  } from 'react';\r\nimport axios from \"axios\";\r\nimport ApiCountry from './ApiCountry.js';\r\n\r\n\r\nconst Main =()=>{\r\n  const API = async ()=>{\r\n    const res = await axios.get(\"https://api.covid19api.com/summary\")\r\n      return res\r\n    };\r\n  \r\n  const [country,setCountry] = useState([]) // 전체 데이터\r\n  const [search, setSearch] = useState('') // 검색어\r\n  const [searched, setSearched] = useState([]) // 검색된 나라들\r\n  \r\n  useEffect(() => {\r\n    const use_res = API()\r\n    use_res.then((res) => {\r\n      setCountry(res.data.Countries)\r\n    })\r\n    .catch(error => console.log(error))\r\n  },[])\r\n\r\n  const onChangeInput = (e : any) :void => {\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  const onSubmitForm = (e : any) => {\r\n    e.preventDefault();\r\n    setSearched(country.filter((value : any) =>  value.Country.toLowerCase().includes(search)))\r\n  }\r\n  return(\r\n    <>\r\n      <div className=\"container\" >\r\n        <form onSubmit={onSubmitForm}>\r\n          <input \r\n            type='text' \r\n            placeholder='국가를 검색해보세요' \r\n            onChange={onChangeInput}\r\n          />\r\n          <button>\r\n            찾기\r\n          </button>\r\n        </form>\r\n        <ul className='country_ul'>\r\n          {\r\n            searched.length === 0 ?\r\n            country.map((v,i)=> <ApiCountry key={i+v} country={v}/>):\r\n            searched.map((v,i)=> <ApiCountry key={i+v} country={v}/>)\r\n          }\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Main","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './Head.module.css'\r\nconst Head = () => {\r\n  return(\r\n    <div className={styles.header}>\r\n      <Link to='/covid'><h1>COVID-19 상황</h1></Link>\r\n      <select>\r\n        <option>국내</option>\r\n        <option>국외</option>\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\nexport default Head","import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\";\r\nconst Total = ()=>{\r\n  \r\n  const [date,setDate] = useState(0)\r\n  const [totalConfirm, setTotalConfirm] = useState(0)\r\n  const [totalDeaths, setTotalDeaths] = useState(0)\r\n  const [newConfirm, setNewConfirm] = useState(0)\r\n  const [newDeaths, setNewDeaths] = useState(0)\r\n  const API = async ()=>{\r\n    const res = await axios.get(\"https://api.covid19api.com/summary\")\r\n    return res\r\n  };\r\n  useEffect(()=>{\r\n    const use_res = API()\r\n    use_res.then((res)=>{\r\n      return res.data.Global\r\n    }).catch(error => console.log(error))\r\n    .then(res => {\r\n      setDate(res.Date.split('T')[0])\r\n      setTotalConfirm(res.TotalConfirmed)\r\n      setTotalDeaths(res.TotalDeaths)\r\n      setNewConfirm(res.NewConfirmed)\r\n      setNewDeaths(res.NewDeaths)\r\n    })\r\n    \r\n  },[])\r\n  \r\n  return (\r\n    <>\r\n      <div className='total_box'>\r\n        <h1>기준일 : {date}</h1>\r\n        <h2>총 확진자수 : {totalConfirm.toLocaleString()}</h2>\r\n        <h2>총 사망자수 : {totalDeaths.toLocaleString()}</h2>\r\n        <h2>금일 확진자수 : {newConfirm.toLocaleString()}</h2>\r\n        <h2>금일 사망자수 : {newDeaths.toLocaleString()}</h2>\r\n      </div>\r\n      \r\n    </>\r\n  )\r\n}\r\nexport default Total","import React,{useEffect, useState} from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Bar,Doughnut, Line } from 'react-chartjs-2';\r\n\r\nconst Graph = (data)=>{\r\n  const code = useLocation()\r\n  \r\n  const [countryData, setCountryData] = useState({})\r\n  const [confirmedData,setConfirmedData]= useState({})\r\n  const [quarantinedData, setQuarantinedData] = useState({})\r\n  const [comparedData, setComparedData] = useState({})\r\n\r\n  useEffect(()=>{\r\n    const countryCode = code.state.data.CountryCode\r\n    setCountryData(code.state.data)\r\n    const fetchEvents = async ()=>{\r\n      const Api = await axios.get(`https://api.covid19api.com/total/dayone/country/${countryCode}`)\r\n      makeData(Api.data)\r\n    }\r\n    const makeData =(items)=>{\r\n      // console.log(items)\r\n      const arr = items.reduce((acc,cur) => {\r\n        const currentDate = new Date(cur.Date);\r\n        const year = currentDate.getFullYear()\r\n        const month = currentDate.getMonth()\r\n        const date = currentDate.getDate()\r\n        const confirmed = cur.Confirmed;\r\n        const active = cur.Active;\r\n        const death = cur.Deaths;\r\n        const recovered = cur.Recovered;\r\n        const findItem = acc.find( a=> a.year === year && a.month === month)\r\n        if(!findItem){\r\n          acc.push({year, month , date , confirmed , active , death , recovered})\r\n        }\r\n        if(findItem && findItem.date < date){\r\n          findItem.active = active;\r\n          findItem.death = death;\r\n          findItem.date = date;\r\n          findItem.year = year;\r\n          findItem.month = month;\r\n          findItem.recovered = recovered;\r\n          findItem.confirmed = confirmed;\r\n        }\r\n        return acc;\r\n      },[])\r\n      const labels = arr.map(v => `${v.year} ${v.month +1}월`)\r\n      setConfirmedData({\r\n        labels,\r\n        datasets : \r\n        [\r\n          {\r\n            label:\"국내 누적 확진자\",\r\n            backgroundColor:\"salmon\",\r\n            fill:\"true\",\r\n            data: arr.map(v=>v.confirmed)\r\n          }\r\n        ]\r\n      })\r\n      setQuarantinedData({\r\n        labels,\r\n        datasets : \r\n        [\r\n          {\r\n            label:\"월별 격리자 현황\",\r\n            borderColor:\"salmon\",\r\n            fill:false,\r\n            data: arr.map(v=>v.active)\r\n          }\r\n        ]\r\n      })\r\n      const last = arr[arr.length-1]\r\n      setComparedData({\r\n        labels:[\"확진자\",\"격리해제\",\"사망\"],\r\n        datasets : \r\n        [\r\n          {\r\n            label:\"누적 확진, 해제, 사망비율\",\r\n            backgroundColor:[\"#ff3d67\",\"#059bff\",\"#ffc233\"],\r\n            borderColor:[\"#ff3d67\",\"#059bff\",\"#ffc233\"],\r\n            fill:false,\r\n            data: [last.confirmed, last.recovered, last.death]\r\n          }\r\n        ]\r\n      })\r\n    }\r\n    fetchEvents()\r\n  },[])\r\n\r\n  return(\r\n    <section>\r\n      <h2>{countryData.Country}의 코로나 현황</h2>\r\n      <div className=\"contents\">\r\n        <div>\r\n          <Bar data={confirmedData} options={\r\n            { title: {display : true, text : '누적 확진자 추이', fontSize : 16 } },\r\n            { legend: { display:true, position:'right' }}\r\n          } /> \r\n        </div>\r\n        <div>\r\n          <Line data={quarantinedData} options={\r\n            { title: {display : true, text : '월별 격리자 추이', fontSize : 16 } },\r\n            { legend: { display:true, position:'right' }}\r\n          } /> \r\n        </div>\r\n        <div>\r\n          <Doughnut data={comparedData} options={\r\n            { title: {display : true, text : `누적 확진, 해제, 사망 ( ${ new Date().getMonth()+1 }월)`, fontSize : 16 } },\r\n            { legend: { display:true, position:'right' }}\r\n          } /> \r\n        </div>\r\n      </div>\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default Graph","import React, { useState, useEffect  } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Graph from './Graph.js'\r\n\r\ninterface TypeData {\r\n  Country: string\r\n  CountryCode: string\r\n  Date: string\r\n  ID: string\r\n  NewConfirmed: number\r\n  NewDeaths: number\r\n  NewRecovered: number\r\n  Premium: object\r\n  Slug: string\r\n  TotalConfirmed: number\r\n  TotalDeaths: number\r\n  TotalRecovered: number\r\n}\r\n\r\nconst Detail = ()=>{\r\n\r\n  const choose : any = useLocation().state\r\n  const [data, setData] = useState<TypeData>()\r\n  useEffect(() => {\r\n    setData(choose.data)\r\n  },[data])\r\n\r\n  return(\r\n    <div className=\"w_1440\">\r\n      <table>\r\n        <tbody>\r\n          <tr className=\"d_tr\">\r\n            <td className=\"d_td\">\r\n              나라\r\n            </td>\r\n            <td className=\"d_td\">\r\n              금일 확진자\r\n            </td>\r\n            <td className=\"d_td\">\r\n              금일 사망자\r\n            </td>\r\n            <td className=\"d_td\">\r\n              총 확진자\r\n            </td>\r\n            <td className=\"d_td\">\r\n              총 사망자\r\n            </td>\r\n          </tr>\r\n          <tr className=\"d_tr\">\r\n            <td className=\"d_td\">\r\n              {data?.Country}\r\n            </td>\r\n            <td className=\"d_td\">\r\n              {data?.NewConfirmed}\r\n            </td>\r\n            <td className=\"d_td\">\r\n              {data?.NewDeaths}\r\n            </td>\r\n            <td className=\"d_td\">\r\n              {data?.TotalConfirmed}\r\n            </td>\r\n            <td className=\"d_td\">\r\n              {data?.TotalDeaths}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <Graph \r\n        data = {data}\r\n      />\r\n      \r\n    </div>\r\n  )\r\n}\r\nexport default Detail\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Main from './component/Main.tsx';\r\nimport Head from './component/Head.tsx'\r\nimport Total from './component/Total.tsx';\r\nimport Detail from './component/Detail.tsx'\r\nimport {Route,BrowserRouter,Switch} from 'react-router-dom'\r\nconst App= ()=>{\r\n  \r\n    return (\r\n      <BrowserRouter>\r\n        <Head />\r\n        <Total />\r\n\r\n        <Switch>\r\n          <Route exact path='/covid'>\r\n            <Main />\r\n          </Route>\r\n          <Route path='/covid/:country' >\r\n            <Detail />\r\n          </Route>\r\n        </Switch>\r\n        \r\n      </BrowserRouter>\r\n      );\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Head_header__12V3U\"};"],"sourceRoot":""}